swagger: "2.0"
info:
  title: test
  version: "1"
host: localhost:8280
basePath: /test/1
schemes:
  - http
paths:
  /rooms4Time:
    get:
      description: "Finds all reservations for a given time period; Filter can be campus or campus + building or campus + building + room"
      summary: "find reservations"
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: campus
          in: query
          type: string
          required: true
        - name: building
          in: query
          type: "string"
          required: false
        - name: "room"
          in: "query"
          type: "string"
          required: false
        - name: "startTime"
          in: "query"
          type: "string"
          format: "date"
          required: true
        - name: "endTime"
          in: "query"
          type: "string"
          format: "date"
          required: true
      responses:
        "200":
          description: "ok"
          examples: {}
        "401":
          description: "Authorization information is missing or invalid"
          examples: {}
        "500":
          description: "Internal server error"
          examples: {}

    post:
      description: "Finds all reservations for a given time period; Filter can be campus or campus + building or campus + building + room"
      summary: "find reservations"
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: campus
          in: query
          type: string
          required: true
        - name: building
          in: query
          type: "string"
          required: false
        - name: "room"
          in: "query"
          type: "string"
          required: false
        - name: "startTime"
          in: "query"
          type: "string"
          format: "date"
          required: true
        - name: "endTime"
          in: "query"
          type: "string"
          format: "date"
          required: true
      responses:
        "200":
          description: "ok"
          examples: {}
        "401":
          description: "Authorization information is missing or invalid"
          examples: {}
        "500":
          description: "Internal server error"
          examples: {}


x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - Internal-Key
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - http://my-http-listener:8080
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - http://my-http-listener:8080
  type: http
x-wso2-basePath: /test/1
x-wso2-transports:
  - http
  - https
x-wso2-application-security:
  security-types:
    - oauth2
  optional: false
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
